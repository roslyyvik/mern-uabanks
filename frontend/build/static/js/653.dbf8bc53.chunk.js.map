{"version":3,"file":"static/js/653.dbf8bc53.chunk.js","mappings":"2OAyHA,UA/GmB,WACjB,IAAAA,GAAqCC,EAAAA,EAAAA,KAA7BC,EAAOF,EAAPE,QAASC,EAAeH,EAAfG,gBACjBC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACrBI,GAAoCL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAOzBG,EAAc,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACnDC,EAAYZ,EAAgB,SAAUW,EAAY,IAClDE,GAAWC,EAAAA,EAAAA,IAAYF,GAEvBG,EAAYf,EAAgB,SAAUW,EAAY,IAClDK,GAAWF,EAAAA,EAAAA,IAAYC,GAEvBE,EAAYjB,EAAgB,SAAUW,EAAY,IAClDO,GAAWJ,EAAAA,EAAAA,IAAYG,GAEvBE,EAAYnB,EAAgB,SAAUW,EAAY,IAClDS,GAAWN,EAAAA,EAAAA,IAAYK,GAEvBE,EAAYrB,EAAgB,SAAUW,EAAY,IAClDW,GAAWR,EAAAA,EAAAA,IAAYO,GAEvBE,EAAYvB,EAAgB,SAAUW,EAAY,IAClDa,GAAWV,EAAAA,EAAAA,IAAYS,GAEvBE,EAAYzB,EAAgB,SAAUW,EAAY,IAClDe,GAAWZ,EAAAA,EAAAA,IAAYW,GAEvBE,GAAiBC,EAAAA,EAAAA,GAAgBhB,GAQjCiB,EAAa,CAMnB,CAAEC,GAAG,EACHC,MAAOf,EACPgB,OAfqBJ,EAAAA,EAAAA,GAAgBb,GAgBrCkB,SAAU,qGAEZ,CAAEH,GAAG,EACHC,MAAOb,EACPc,OAnBqBJ,EAAAA,EAAAA,GAAgBX,GAoBrCgB,SAAU,yFAEZ,CAAEH,GAAG,EACHC,MAAOX,EACPY,OAvBqBJ,EAAAA,EAAAA,GAAgBT,GAwBrCc,SAAU,8CAEZ,CAAEH,GAAG,EACHC,MAAOT,EACPU,OA3BqBJ,EAAAA,EAAAA,GAAgBP,GA4BrCY,SAAU,qIAEZ,CAAEH,GAAG,EACHC,MAAOP,EACPQ,OA/BqBJ,EAAAA,EAAAA,GAAgBL,GAgCrCU,SAAU,iEAEZ,CAAEH,GAAG,EACHC,MAAOL,EACPM,OAnCqBJ,EAAAA,EAAAA,GAAgBH,GAoCrCQ,SAAU,+CAIZ,OAAGlC,GACMmC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,KAGfC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0CACFD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACG5B,GAAYyB,EAAAA,EAAAA,KAACI,EAAAA,GAAkB,CAACP,MAAOlB,KAAeqB,EAAAA,EAAAA,KAACK,EAAAA,GAAc,CAACR,MAAOlB,KAC9EqB,EAAAA,EAAAA,KAAA,UAAQM,UAAU,eAAeC,QAlFnB,WACtB/B,GAAcD,EAChB,EAgFoE4B,SAAE5B,GAAYyB,EAAAA,EAAAA,KAACQ,EAAAA,IAAU,KAAKR,EAAAA,EAAAA,KAACS,EAAAA,GAAW,UAEtGT,EAAAA,EAAAA,KAAA,OAAKM,UAAU,kBAAiBH,SAAEV,QAEtCS,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAmBC,QAAS,kBAAMnC,GAASD,EAAK,EAACgC,SAAA,EACxDH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kGACJH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAMH,SAAEhC,GAAO6B,EAAAA,EAAAA,KAACU,EAAAA,IAAc,KAAKV,EAAAA,EAAAA,KAACW,EAAAA,IAAa,SAEjExC,IACC6B,EAAAA,EAAAA,KAAA,OAAKM,UAAU,uBAAsBH,SAClCR,EAAWiB,KAAI,SAACC,GACf,OACEX,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAX,SAAA,EACEH,EAAAA,EAAAA,KAACe,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,GAAmBH,GAAbA,EAAKjB,KACjBI,EAAAA,EAAAA,KAAA,OAAKM,UAAU,gBAGrB,QAKhB,C,4ECrGA,IAdc,SAAHW,GAAoC,IAA9BpB,EAAKoB,EAALpB,MAAOE,EAAQkB,EAARlB,SAAUD,EAAKmB,EAALnB,MAChC/B,GAAoCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCmD,EAASjD,EAAA,GAAEkD,EAAYlD,EAAA,GAC/B,OACEiC,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAX,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,SAAKJ,KACLG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGe,GAAYlB,EAAAA,EAAAA,KAACI,EAAAA,GAAkB,CAACP,MAAOA,KAAYG,EAAAA,EAAAA,KAACK,EAAAA,GAAc,CAACR,MAAOA,KAC3EG,EAAAA,EAAAA,KAAA,UAAQM,UAAU,eAAgBC,QAAS,kBAAMY,GAAcD,EAAU,EAACf,SAAEe,GAAYlB,EAAAA,EAAAA,KAACQ,EAAAA,IAAU,KAAKR,EAAAA,EAAAA,KAACS,EAAAA,GAAW,SAErHX,IAGP,C,+HCdaO,EAAiB,SAACe,GAC7B,OACEpB,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWH,UACxBH,EAAAA,EAAAA,KAACqB,EAAAA,GAAG,CACFC,KAAMF,EAAMvB,MACZ0B,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRD,SAAS,GAEXE,MAAO,CACLF,SAAS,EACTG,KAAM,0CAGVC,YAAY,EACZC,YAAa,CACXC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,EAAG,CACDC,SAAS,GAEXC,EAAG,CACDD,SAAS,QAOvB,EAEahC,EAAqB,SAAHa,GAAmB,IAAbpB,EAAKoB,EAALpB,MACnC,OACEG,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CACHhB,KAAMzB,EACN0B,QAAS,CACPgB,UAAS,EACTC,YAAa,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,WAEhEhB,QAAS,CACPI,MAAO,CACLF,SAAS,EACTG,KAAM,0CAGVC,YAAY,EACZC,YAAa,CACXC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,EAAG,CACDC,SAAS,GAEXC,EAAG,CACDD,SAAS,QAOvB,EAEaK,EAAoB,SAAHC,GAAmB,IAAb7C,EAAK6C,EAAL7C,MAClC,OACEG,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CACHhB,KAAMzB,EACN0B,QAAS,CACPgB,UAAS,EACTC,YAAa,UACbG,MAAK,EACLnB,QAAS,CACPC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRD,SAAS,GAEXE,MAAO,CACLF,SAAS,EACTG,KAAM,KAGVC,YAAY,EACZC,YAAa,CACXC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,EAAG,CACDT,SAAS,EACTU,SAAS,GAEXC,EAAG,CACDX,SAAS,EACTU,SAAS,QAOvB,C,uHC7GaxE,EAAa,WACxB,IAAQgF,GAAQC,EAAAA,EAAAA,MAARD,IACR7E,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCF,EAAOI,EAAA,GAAE6E,EAAU7E,EAAA,GAC1BI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1C0E,EAAUzE,EAAA,GAAE0E,EAAa1E,EAAA,GAE3B2E,EAAa,eAAAhC,GAAAiC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACJ,OAAhBZ,GAAW,GAAKU,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAAA,IAAU,sBAADC,OAAuBhB,IAAM,OAAvDU,EAAQE,EAAAK,KACdb,EAAcM,EAAShC,MACvBwB,GAAW,GAAMU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEjBO,QAAQC,IAAGR,EAAAM,IAAG,yBAAAN,EAAAS,OAAA,GAAAZ,EAAA,kBAEjB,kBATkB,OAAApC,EAAAiD,MAAA,KAAAC,UAAA,KAWbrG,EAAkB,SAACsG,EAAUC,GACjC,IAAMC,EAAevB,EAClBwB,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,KAAOA,GACrB4B,EAAKJ,YAAcA,GACnBI,EAAKH,QAAUA,CAAK,IAuB7B,OArBAC,EAAaG,SAAQ,SAAC5D,EAAM6D,GAC1B7D,EAAS,GAAI,UACZ6D,EAAQ,IACT7D,EAAS,GAAI,WAEZ6D,EAAQ,IACT7D,EAAS,GAAI,WAEZ6D,EAAQ,IACT7D,EAAS,GAAI,WAEZ6D,EAAQ,IACT7D,EAAS,GAAI,WAEZ6D,EAAQ,IACT7D,EAAS,GAAI,WAEZ6D,EAAQ,IACT7D,EAAS,GAAI,UAEf,IACOyD,CACX,EAOE,OALAK,EAAAA,EAAAA,YAAU,WACR1B,IACAnF,GAEF,GAAE,IACK,CAACD,QAAAA,EAASC,gBAAAA,EAAiBiF,WAAAA,EACpC,C,6FC1CA6B,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGK,IAAMC,EAAS,CAAC,UAAW,UAAU,UAAW,UAAW,WAuDrD1G,EAAc,SAAC2G,GAE1B,MAAQ,CACND,OAAOA,EACPE,SAASD,EAAS3E,KAAI,SAAAC,GAEtB,MACK,CACC4E,MAHkF5E,EAA9E6E,MAIJC,gBAJkF9E,EAAvE+E,GAKXtE,KAAK,CAL6ET,EAAnEgF,YAKG,IALgEhF,EAAtDiF,YAKO,IAL+CjF,EAAzCkF,YAKW,IAL8BlF,EAA5BmF,YAKe,IALanF,EAAfoF,YAKmB,KAI5F,IAEJ,EAEMC,EAAiB,CAAC,UAAU,UAAW,WAChCC,EAAgB,SAACC,GAC5B,MAAQ,CACNd,OAAOY,EACPV,SAAS,CACP,CACEC,MAAM,GACNE,gBAAgB,UAChBrE,KAAK8E,EAAMxF,KAAI,SAACC,GAAI,OAAKA,EAAKwB,CAAC,IAC/BgE,QAAQ,IAIhB,C,sFC3Ga3G,EAAkB,SAAC6F,GAE5B,OAEUrF,EAAAA,EAAAA,MAAA,SAAOI,UAAU,kBAAiBH,SAAA,EAChCH,EAAAA,EAAAA,KAAA,SAAAG,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,sDACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,aACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,aACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,aACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,aACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kBAGRH,EAAAA,EAAAA,KAAA,SAAAG,SACGoF,EACE3E,KAAI,SAAA0F,GAAO,OACZpG,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAI,UAAQ,mDAAUG,SAAEmG,EAAQZ,SAChC1F,EAAAA,EAAAA,KAAA,MAAI,UAAQ,UAASG,UAAEoG,EAAAA,EAAAA,GAAeD,EAAQT,YAAYW,cAC1DxG,EAAAA,EAAAA,KAAA,MAAI,UAAQ,UAASG,UAAEoG,EAAAA,EAAAA,GAAeD,EAAQR,YAAYU,cAC1DxG,EAAAA,EAAAA,KAAA,MAAI,UAAQ,UAASG,UAAEoG,EAAAA,EAAAA,GAAeD,EAAQP,YAAYS,cAC1DxG,EAAAA,EAAAA,KAAA,MAAI,UAAQ,UAASG,UAAEoG,EAAAA,EAAAA,GAAeD,EAAQN,YAAYQ,cAC1DxG,EAAAA,EAAAA,KAAA,MAAI,UAAQ,UAASG,UAAEoG,EAAAA,EAAAA,GAAeD,EAAQL,YAAYO,eANnDF,EAAQ1G,GAOZ,QAKjB,C","sources":["components/AssetsItem.js","components/Chart.js","components/IndicatorChart.js","hooks/useIdFetch.js","utils/tableChart.js","utils/tableIndicators.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { IndicatorChart, IndicatorLineChart } from '../components/IndicatorChart'\nimport { useIdFetch } from '../hooks/useIdFetch'\nimport { assetsChart } from \"../utils/tableChart\"\nimport {tableIndicators,} from \"../utils/tableIndicators\"\nimport {FaChartLine, FaChartBar } from 'react-icons/fa'\nimport Chart from '../components/Chart';\nimport { AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai'\nimport Loading from '../components/Loading'\n\nconst AssetsItem = () => {\n  const { loading, indicatorsValue } = useIdFetch()\n  const [ show, setShow ] = useState(false)\n  const [ chartType, setChartType ] = useState()\n\n  const handleChartType = () => {\n    setChartType(!chartType)\n  }\n\n  // ASSETS\n  const assetsLevel = [\"0_0\",\"1_0\",\"1_1\",'3_3','4_4','5_5','6_6']\n  const assets0_0 = indicatorsValue(\"assets\", assetsLevel[0])\n  const chart0_0 = assetsChart(assets0_0)\n\n  const assets1_0 = indicatorsValue(\"assets\", assetsLevel[1])\n  const chart1_0 = assetsChart(assets1_0)\n\n  const assets1_1 = indicatorsValue(\"assets\", assetsLevel[2])\n  const chart1_1 = assetsChart(assets1_1)\n\n  const assets3_3 = indicatorsValue(\"assets\", assetsLevel[3])\n  const chart3_3 = assetsChart(assets3_3)\n\n  const assets4_4 = indicatorsValue(\"assets\", assetsLevel[4])\n  const chart4_4 = assetsChart(assets4_4)\n\n  const assets5_5 = indicatorsValue(\"assets\", assetsLevel[5])\n  const chart5_5 = assetsChart(assets5_5)\n\n  const assets6_6 = indicatorsValue(\"assets\", assetsLevel[6])\n  const chart6_6 = assetsChart(assets6_6)\n\n  const assets0_0Table = tableIndicators(assets0_0)\n  const assets1_0Table = tableIndicators(assets1_0)\n  const assets1_1Table = tableIndicators(assets1_1)\n  const assets3_3Table = tableIndicators(assets3_3)\n  const assets4_4Table = tableIndicators(assets4_4)\n  const assets5_5Table = tableIndicators(assets5_5)\n  const assets6_6Table = tableIndicators(assets6_6)\n\n  const assetsBank = [\n    // { id:0,\n    //   chart: chart0_0,\n    //   table: assets0_0Table,\n    //   itemName: 'Структура Активів',\n    // },\n  { id:1,\n    chart: chart1_0,\n    table: assets1_0Table,\n    itemName: 'Структура Активів',\n  },\n  { id:2,\n    chart: chart1_1,\n    table: assets1_1Table,\n    itemName: 'Ліквідні Активи',\n  },\n  { id:3,\n    chart: chart3_3,\n    table: assets3_3Table,\n    itemName: 'Кредити',\n  },\n  { id:4,\n    chart: chart4_4,\n    table: assets4_4Table,\n    itemName: 'Інвестиції, Цінні Папери',\n  },\n  { id:5,\n    chart: chart5_5,\n    table: assets5_5Table,\n    itemName: 'Інші Активи',\n  },\n  { id:6,\n    chart: chart6_6,\n    table: assets6_6Table,\n    itemName: 'Резерви',\n  },\n  ]\n\n  if(loading){\n    return <Loading />\n  }\n  return (\n    <div>\n      <h1>АКТИВИ</h1>\n        <div>\n          <div>\n            {chartType ? <IndicatorLineChart chart={chart0_0} /> : <IndicatorChart chart={chart0_0} /> }\n            <button className='btn btn-type' onClick={handleChartType}>{chartType ? <FaChartBar/> : <FaChartLine/>}</button>\n          </div>\n          <div className='bank-item-table'>{assets0_0Table}</div>\n        </div>\n      <div className=\"accordian-header\" onClick={() => setShow(!show)}>\n              <h3>Більше про АКТИВИ</h3>\n              <div className='sign'>{show ? <AiOutlineMinus/> : <AiOutlinePlus/> }</div>\n      </div>\n            {show && (\n              <div className='bank-indicators-item'>\n                {assetsBank.map((item) => {\n                  return (\n                    <>\n                      <Chart key={item.id} {...item} />\n                      <div className='underline'></div>\n                    </>\n                  )\n                })}\n              </div>\n            )}\n    </div>\n  )\n}\n\nexport default AssetsItem","import React, { useState } from 'react'\nimport { IndicatorChart, IndicatorLineChart } from './IndicatorChart'\nimport {FaChartLine, FaChartBar} from 'react-icons/fa'\n\nconst Chart = ({ chart, itemName, table }) => {\n  const [ typeChart, setTypeChart ] = useState()\n  return (\n    <>\n      <h2>{itemName}</h2>\n      <div>\n        {typeChart ? <IndicatorLineChart chart={chart} /> : <IndicatorChart chart={chart} /> }\n        <button className='btn btn-type'  onClick={() => setTypeChart(!typeChart)}>{typeChart ? <FaChartBar/> : <FaChartLine/>}</button>\n      </div>\n      {table}\n    </>\n  )\n}\n\nexport default Chart","import { Bar, Line } from 'react-chartjs-2'\n\nexport const IndicatorChart = (props) => {\n  return (\n    <div className='chart-bar'>\n      <Bar\n        data={props.chart}\n        options={{\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltips: {\n              display: true\n            },\n            title: {\n              display: true,\n              text: 'млн.грн',\n            },\n          },\n          responsive: true,\n          interaction: {\n            mode: 'index',\n            intersect: false,\n          },\n          scales: {\n            x: {\n              stacked: false,\n            },\n            y: {\n              stacked: false,\n            },\n          },\n        }}\n      />\n    </div>\n  )\n}\n\nexport const IndicatorLineChart = ({ chart }) => {\n  return (\n    <div>\n      <Line\n        data={chart}\n        options={{\n          showLine:true,\n          borderColor: ['#f3ba2f','#50AF95','#2a71d0','#ff1a1a','#ff99ff','#ff9900'],\n          // fill:true,\n          plugins: {\n            title: {\n              display: true,\n              text: 'млн.грн',\n            },\n          },\n          responsive: true,\n          interaction: {\n            mode: 'index',\n            intersect: false,\n          },\n          scales: {\n            x: {\n              stacked: false,\n            },\n            y: {\n              stacked: false,\n            },\n          },\n        }}\n      />\n    </div>\n  )\n}\n\nexport const BankItemLineChart = ({ chart }) => {\n  return (\n    <div>\n      <Line\n        data={chart}\n        options={{\n          showLine:true,\n          borderColor: '#ffff00',\n          fill:true,\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltips: {\n              display: false\n            },\n            title: {\n              display: false,\n              text: '',\n            },\n          },\n          responsive: true,\n          interaction: {\n            mode: 'index',\n            intersect: false,\n          },\n          scales: {\n            x: {\n              display: false,\n              stacked: false,\n            },\n            y: {\n              display: false,\n              stacked: false,\n            },\n          },\n        }}\n      />\n    </div>\n  )\n}","import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\nexport const useIdFetch = () => {\n  const { mfo } = useParams()\n  const [loading, setLoading] = useState(true)\n  const [ indicators, setIndicators ] = useState([])\n\n  const getIndicators = async () => {\n    setLoading(true)\n    try {\n      const response = await axios.get(`/api/v1/indicators/${mfo}`)\n      setIndicators(response.data)\n      setLoading(false)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const indicatorsValue = (indicator,level) => {\n    const filteredData = indicators\n      .filter(elem => elem.mfo == mfo\n          && elem.indicator === indicator\n          && elem.level === level)\n\n    filteredData.forEach((item, index) => {\n      item['bg'] = '#f3ba2f'\n    if(index > 0){\n      item['bg'] = '#50AF95'\n    }\n    if(index > 1){\n      item['bg'] = '#2a71d0'\n    }\n    if(index > 2){\n      item['bg'] = '#ff1a1a'\n    }\n    if(index > 3){\n      item['bg'] = '#ff99ff'\n    }\n    if(index > 4){\n      item['bg'] = '#ff9900'\n    }\n    if(index > 5){\n      item['bg'] = '#ff9900'\n    }\n    })\n    return filteredData\n}\n\n  useEffect(()=>{\n    getIndicators()\n    indicatorsValue()\n    // eslint-disable-next-line\n  },[])\n  return {loading, indicatorsValue, indicators}\n}\n","// import { Chart } from 'react-chartjs-2'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend,\n  PointElement,\n);\n\nexport const labels = ['2020/10', '2021/01','2022/01', '2022/07', '2023/01']\n// const bg = [\"#f3ba2f\",'#50AF95',\"#2a71d0\",\"#ff1a1a\",'#ff99ff']\n\n// export const options = {\n//   plugins: {\n//     title: {\n//       display: true,\n//       text: 'Chart.js Bar Chart - Stacked',\n//     },\n//   },\n//   responsive: true,\n//   interaction: {\n//     mode: 'index',\n//     intersect: false,\n//   },\n//   scales: {\n//     x: {\n//       stacked: true,\n//     },\n//     y: {\n//       stacked: true,\n//     },\n//   },\n// };\n\n// export const data = {\n//   labels,\n//   datasets: [\n//     {\n//       label: 'Dataset 1',\n//       data: labels.map((item) => [item.D2020_07_01,item.D2020_10_01,item.D2021_01_01,item.D2022_01_01,item.D2022_07_01,]),\n//       backgroundColor: 'rgb(255, 99, 132)',\n//       stack: 'Stack 0',\n//     },\n//     {\n//       label: 'Dataset 2',\n//       data: labels.map((item) => [item.D2020_07_01,item.D2020_10_01,item.D2021_01_01,item.D2022_01_01,item.D2022_07_01,]),\n//       backgroundColor: 'rgb(75, 192, 192)',\n//       stack: 'Stack 1',\n//     },\n//     {\n//       label: 'Dataset 3',\n//       data: labels.map((item) => [item.D2020_07_01,item.D2020_10_01,item.D2021_01_01,item.D2022_01_01,item.D2022_07_01,]),\n//       backgroundColor: 'rgb(53, 162, 235)',\n//       stack: 'Stack 2',\n//     },\n//     {\n//       label: 'Dataset 4',\n//       data: labels.map((item) => [item.D2020_07_01,item.D2020_10_01,item.D2021_01_01,item.D2022_01_01,item.D2022_07_01,]),\n//       backgroundColor: 'rgb(53, 162, 235)',\n//       stack: 'Stack 4',\n//     },\n//   ],\n// };\n\nexport const assetsChart = (elements) => {\n\n  return ({\n    labels:labels,\n    datasets:elements.map(item => {\n      const { items, bg, D2020_10_01, D2021_01_01, D2022_01_01, D2022_07_01, D2023_01_01} = item\n    return(\n         {\n          label:items,\n          backgroundColor:bg,\n          data:[D2020_10_01/1000,D2021_01_01/1000,D2022_01_01/1000,D2022_07_01/1000,D2023_01_01/1000],\n          // stack:''\n        }\n      )\n    }),\n  })\n}\n\nconst labelsBankItem = ['2022/01','2022/07', '2023/01',]\nexport const bankItemChart = (elems) => {\n  return ({\n    labels:labelsBankItem,\n    datasets:[\n      {\n        label:'',\n        backgroundColor:'#74bff1',\n        data:elems.map((item) => item.y),\n        hidden: false,\n      }\n    ],\n  })\n}","import React from 'react'\nimport moneyFormatter from './format'\n// import { FaTable} from 'react-icons/fa'\n\n\nexport const tableIndicators = (elements) => {\n\n    return (\n\n              <table className='bank-item-table'>\n                <thead>\n                  <tr>\n                    <th>Показник</th>\n                    <th>2020/10</th>\n                    <th>2021/01</th>\n                    <th>2022/01</th>\n                    <th>2022/07</th>\n                    <th>2023/01</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {elements\n                    .map(element => (\n                    <tr key={element.id}>\n                      <td data-th=\"Показник\">{element.items}</td>\n                      <td data-th=\"2020/10\">{moneyFormatter(element.D2020_10_01.toFixed())}</td>\n                      <td data-th=\"2021/01\">{moneyFormatter(element.D2021_01_01.toFixed())}</td>\n                      <td data-th=\"2022/01\">{moneyFormatter(element.D2022_01_01.toFixed())}</td>\n                      <td data-th=\"2022/07\">{moneyFormatter(element.D2022_07_01.toFixed())}</td>\n                      <td data-th=\"2023/01\">{moneyFormatter(element.D2023_01_01.toFixed())}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n          )\n        }"],"names":["_useIdFetch","useIdFetch","loading","indicatorsValue","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","chartType","setChartType","assetsLevel","assets0_0","chart0_0","assetsChart","assets1_0","chart1_0","assets1_1","chart1_1","assets3_3","chart3_3","assets4_4","chart4_4","assets5_5","chart5_5","assets6_6","chart6_6","assets0_0Table","tableIndicators","assetsBank","id","chart","table","itemName","_jsx","Loading","_jsxs","children","IndicatorLineChart","IndicatorChart","className","onClick","FaChartBar","FaChartLine","AiOutlineMinus","AiOutlinePlus","map","item","_Fragment","Chart","_objectSpread","_ref","typeChart","setTypeChart","props","Bar","data","options","plugins","legend","display","tooltips","title","text","responsive","interaction","mode","intersect","scales","x","stacked","y","Line","showLine","borderColor","BankItemLineChart","_ref2","fill","mfo","useParams","setLoading","indicators","setIndicators","getIndicators","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","t0","console","log","stop","apply","arguments","indicator","level","filteredData","filter","elem","forEach","index","useEffect","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","Title","Tooltip","Filler","Legend","PointElement","labels","elements","datasets","label","items","backgroundColor","bg","D2020_10_01","D2021_01_01","D2022_01_01","D2022_07_01","D2023_01_01","labelsBankItem","bankItemChart","elems","hidden","element","moneyFormatter","toFixed"],"sourceRoot":""}